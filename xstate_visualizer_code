const fetchMachine = Machine({
  id: 'The Cool Companion',
  initial: 'off',
  states: {
    Refrigerator: {
      initial: 'Off',
      states: {
        Off: {
          on: {
            'Connect to Power': {
              target: 'On'
            }
          }
        },
        On: {
          states: {
            Cooler: {
              initial: 'Cooling',
              states: {
                Cooling: {
                  on: {
                    'Temperature Reached': {
                      target: 'Idle',
                    },
                    FAULT: {
                      target: 'Fault',
                  actions: [
                    'Notify User'
                    ]
                    },
                    'Ice Accumulated': {
                      target: 'Defrosting'
                    }
                  }
                },
                Idle: {
                  on: {
                    'Temperature Too High': {
                      target: 'Cooling',
                    }
                  }
                },
                Defrosting: {
                  on: {
                    'Ice Melted': {
                      target: 'Cooling'
                    },
                    FAULT: {
                      target: 'Fault',
                  actions: [
                    'Notify User'
                    ]
                    }
                  }
                },
                Fault: {
                  type: 'final',
                }
              }
            },
            Freezer: {
              initial: 'Freezing',
              states: {
                Freezing: {
                  on: {
                    FAULT: {
                      target: 'Fault',
                  actions: [
                    'Notify User'
                    ]
                    },
                    'Ice Accumulated': {
                      target: 'Defrosting'
                    },
                    'Temperature Reached': {
                      target: 'Idle',
                    }
                  }
                },
                Idle: {
                  on: {
                    'Temperature Too High': {
                      target: 'Freezing',
                    }
                  }
                },
                Defrosting: {
                  on: {
                    'Ice Melted': {
                      target: 'Freezing'
                    },
                    FAULT: {
                      target: 'Fault',
                  actions: [
                    'Notify User'
                    ]
                    }
                  }
                },
                Fault: {
                  type: 'final'
                }
              }
            },
            Lights: {
              initial: 'LIGHTS_OFF',
              states: {
                LIGHTS_OFF: {
                  on: {
                    'turn on lights': {
                      target: 'LIGHTS_ON'
                    }
                  }
                },
                LIGHTS_ON: {
                  on: {
                    'Turn Off lights': {
                      target: 'LIGHTS_OFF'
                    }
                  }
                }
              }
            },
            'Sound Alarm': {
              initial: 'SOUND_OFF',
              states: {
                SOUND_OFF: {},
                SOUND_ON: {
                  after: {
                    2000: {
                      target: '#The Cool Companion.Refrigerator.On.Sound Alarm.SOUND_OFF',
                      actions: [],
                      internal: false
                    }
                  }
                }
              }
            },
            'Product Management': {
              initial: 'On Stand By',
              states: {
                'Update Products In DB': {
                  on: {
                    'Product Taken Out': {
                      target: '#The Cool Companion.Refrigerator.On.Product Management.Update Products In DB',
                      actions: [
                        'Log Product Removal'
                        ],
                    },
                    'Product Added': {
                      actions: [
                        'Log Product Addition'
                        ]
                    }
                  },
                  after: {
                    24000: {
                      target: '#The Cool Companion.Refrigerator.On.Product Management.Update Products In DB',
                      actions: [
                        'Check For Expired Products',
                        'If There are Expired Products, Notify User'
                      ],
                      description: '',
                      meta: {},
                      internal: true
                    }
                  }
                },
                'On Stand By': {
            
                }
              }
            },
            UI: {
              initial: 'Main Menu',
              states: {
                'Main Menu': {
                  on: {
                    'View Current Content': {
                      target: 'Main Menu',
                      actions: 'Send User List of Current Content',
                      internal: false
                    },
                    'Suggest Recipes Based On Current Content': {
                      target: 'Main Menu',
                      actions: 'Suggest Recipes According To Current Content',
                      internal: false
                    }
                  }
                }
              }
            }
          },
          type: 'parallel'
        }
      }
    },
    Door: {
      initial: 'closed',
      states: {
        closed: {
          after: {
            0: {
              target: '#The Cool Companion.Refrigerator.On.Sound Alarm.SOUND_OFF',
              in: '#The Cool Companion.Refrigerator.On',
              actions: [],
              internal: false
            },
            1: {
              target: '#The Cool Companion.Refrigerator.On.Lights.LIGHTS_OFF',
              actions: [],
              in: '#The Cool Companion.Refrigerator.On',
              internal: false
            },
            0.5: {
              target: '#The Cool Companion.Refrigerator.On.Product Management.Update Products In DB',
              actions: [
                'Scan Refrigerator Content'
              ],
              in: '#The Cool Companion.Refrigerator.On',
              internal: false
            }
          },
          on: {
            'Open Door': {
              target: 'opened'
            }
          }
        },
        opened: {
          after: {
            1: {
              target: '#The Cool Companion.Refrigerator.On.Lights.LIGHTS_ON',
              in: '#The Cool Companion.Refrigerator.On',
              actions: [],
              internal: false
            },
            3000: {
              target: '#The Cool Companion.Refrigerator.On.Sound Alarm.SOUND_ON',
              in: '#The Cool Companion.Refrigerator.On',
              actions: [],
              internal: false
            },
            0.001: {
              target: '#The Cool Companion.Refrigerator.On.Product Management.On Stand By',
              in: '#The Cool Companion.Refrigerator.On',
              actions: [],
              internal: false
            }
          },
          on: {
            'Close Door': {
              target: 'closed'
            }
          }
        }
      }
    }
  },
  type: 'parallel'
});
